server {
    listen 443 ssl;
    server_name huanghongzhe.xyz;

    # SSL证书配置（保持不变）
    ssl_certificate /etc/nginx/ssl/huanghongzhe.xyz.pem;
    ssl_certificate_key /etc/nginx/ssl/huanghongzhe.xyz.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 首先处理静态文件 - 使用更精确的匹配
    location ~ ^/([to])/([^/]+)/static/(.+\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot))$ {
        set $app $2;
        set $file_path $3;
        alias /var/www/django_project/static/$file_path;

        # 添加调试头
        # add_header X-Debug-Static "true";
        # add_header X-File-Path "/var/www/django_project/static/$uri";
        # add_header X-Request-URI "$uri";

        # 根据文件类型设置正确的 MIME 类型
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        expires 30d;
        add_header Cache-Control "public, max-age=86400";
        access_log off;
    }

    # 然后处理媒体文件
    location ~ ^/([to])/([^/]+)/media/(.*)$ {
        set $app $2;
        set $file_path $3;
        alias /var/www/django_project/media/$app/$file_path;

        # 禁用目录重定向
        index nothing__;
        autoindex off;

        # MIME 类型
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        expires 30d;
        add_header Cache-Control "public, max-age=604800";
        access_log off;

        # 简单的文件存在检查
        try_files $uri =404;
    }

    # 最后处理动态请求 - 使用更通用的匹配
    location ~ ^/([to])/([^/]+)/ {
        set $env $1;
        set $app $2;
        set $upstream_name "${env}_${app}";

        # 动态转发到对应上游服务
        proxy_pass http://$upstream_name;

        # 原有代理头、CORS配置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-CSRFToken $http_x_csrf_token;
        proxy_redirect off;

        # CORS支持
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';

        # 处理预检请求
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-CSRFToken';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}